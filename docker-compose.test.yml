version: '3.8'

services:
  test-db:
    image: postgres:13
    environment:
      POSTGRES_DB: test_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  test-redis:
    image: redis:6
    ports:
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  test-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      DATABASE_URL: postgres://postgres:postgres@test-db:5432/test_db
      REDIS_URL: redis://test-redis:6379/0
      DJANGO_SETTINGS_MODULE: fenix_academy.settings.test
      SECRET_KEY: test-secret-key
      DEBUG: true
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py test --verbosity=2"

  test-frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    environment:
      NEXT_PUBLIC_API_URL: http://test-backend:8000
    depends_on:
      - test-backend
    command: npm test -- --watchAll=false

  integration-test:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      DATABASE_URL: postgres://postgres:postgres@test-db:5432/test_db
      REDIS_URL: redis://test-redis:6379/0
      DJANGO_SETTINGS_MODULE: fenix_academy.settings.test
      SECRET_KEY: test-secret-key
      DEBUG: true
    depends_on:
      test-db:
        condition: service_healthy
      test-redis:
        condition: service_healthy
    command: >
      sh -c "python manage.py migrate &&
             python manage.py test api.tests.test_integration --verbosity=2" 