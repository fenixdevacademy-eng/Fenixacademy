# Generated by Django 5.2.4 on 2025-07-28 23:08

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoice_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('invoice_number', models.CharField(max_length=50, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('open', 'Open'), ('paid', 'Paid'), ('uncollectible', 'Uncollectible'), ('void', 'Void')], default='draft', max_length=20)),
                ('currency', models.CharField(choices=[('usd', 'USD'), ('brl', 'BRL'), ('eur', 'EUR'), ('gbp', 'GBP'), ('cad', 'CAD'), ('aud', 'AUD'), ('jpy', 'JPY'), ('inr', 'INR'), ('mxn', 'MXN'), ('ars', 'ARS'), ('clp', 'CLP'), ('cop', 'COP'), ('pen', 'PEN'), ('uyu', 'UYU'), ('pyg', 'PYG'), ('bob', 'BOB'), ('cny', 'CNY'), ('krw', 'KRW'), ('sgd', 'SGD'), ('hkd', 'HKD')], default='usd', max_length=3)),
                ('subtotal', models.DecimalField(decimal_places=2, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('total_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('billing_name', models.CharField(max_length=200)),
                ('billing_email', models.EmailField(max_length=254)),
                ('billing_address', models.TextField(blank=True)),
                ('billing_city', models.CharField(blank=True, max_length=100)),
                ('billing_state', models.CharField(blank=True, max_length=100)),
                ('billing_country', models.CharField(blank=True, max_length=2)),
                ('billing_postal_code', models.CharField(blank=True, max_length=20)),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('issue_date', models.DateTimeField(auto_now_add=True)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('paid_date', models.DateTimeField(blank=True, null=True)),
                ('pdf_file', models.FileField(blank=True, null=True, upload_to='invoices/')),
                ('pdf_generated', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'invoice',
                'verbose_name_plural': 'invoices',
                'db_table': 'invoices',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(choices=[('usd', 'USD'), ('brl', 'BRL'), ('eur', 'EUR'), ('gbp', 'GBP'), ('cad', 'CAD'), ('aud', 'AUD'), ('jpy', 'JPY'), ('inr', 'INR'), ('mxn', 'MXN'), ('ars', 'ARS'), ('clp', 'CLP'), ('cop', 'COP'), ('pen', 'PEN'), ('uyu', 'UYU'), ('pyg', 'PYG'), ('bob', 'BOB'), ('cny', 'CNY'), ('krw', 'KRW'), ('sgd', 'SGD'), ('hkd', 'HKD')], default='usd', max_length=3)),
                ('payment_method', models.CharField(choices=[('stripe', 'Stripe'), ('paypal', 'PayPal'), ('pix', 'PIX'), ('boleto', 'Boleto'), ('credit_card', 'Credit Card'), ('debit_card', 'Debit Card'), ('bank_transfer', 'Bank Transfer'), ('apple_pay', 'Apple Pay'), ('google_pay', 'Google Pay'), ('alipay', 'Alipay'), ('wechat_pay', 'WeChat Pay'), ('amazon_pay', 'Amazon Pay'), ('klarna', 'Klarna'), ('affirm', 'Affirm'), ('afterpay', 'Afterpay'), ('crypto', 'Cryptocurrency')], default='stripe', max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded'), ('disputed', 'Disputed')], default='pending', max_length=20)),
                ('original_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('original_currency', models.CharField(blank=True, choices=[('usd', 'USD'), ('brl', 'BRL'), ('eur', 'EUR'), ('gbp', 'GBP'), ('cad', 'CAD'), ('aud', 'AUD'), ('jpy', 'JPY'), ('inr', 'INR'), ('mxn', 'MXN'), ('ars', 'ARS'), ('clp', 'CLP'), ('cop', 'COP'), ('pen', 'PEN'), ('uyu', 'UYU'), ('pyg', 'PYG'), ('bob', 'BOB'), ('cny', 'CNY'), ('krw', 'KRW'), ('sgd', 'SGD'), ('hkd', 'HKD')], max_length=3, null=True)),
                ('exchange_rate', models.DecimalField(blank=True, decimal_places=6, max_digits=10, null=True)),
                ('processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('tax_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('tax_country', models.CharField(blank=True, max_length=2)),
                ('stripe_payment_intent_id', models.CharField(blank=True, max_length=255)),
                ('stripe_charge_id', models.CharField(blank=True, max_length=255)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255)),
                ('stripe_refund_id', models.CharField(blank=True, max_length=255)),
                ('paypal_order_id', models.CharField(blank=True, max_length=255)),
                ('paypal_payment_id', models.CharField(blank=True, max_length=255)),
                ('pix_key', models.CharField(blank=True, max_length=255)),
                ('pix_qr_code', models.TextField(blank=True)),
                ('pix_expires_at', models.DateTimeField(blank=True, null=True)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('risk_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('fraud_detected', models.BooleanField(default=False)),
                ('fraud_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('failed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'payment',
                'verbose_name_plural': 'payments',
                'db_table': 'payments',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_method_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('payment_method_type', models.CharField(choices=[('card', 'Credit/Debit Card'), ('bank_account', 'Bank Account'), ('pix', 'PIX'), ('boleto', 'Boleto'), ('paypal', 'PayPal'), ('apple_pay', 'Apple Pay'), ('google_pay', 'Google Pay'), ('alipay', 'Alipay'), ('wechat_pay', 'WeChat Pay'), ('crypto', 'Cryptocurrency')], default='card', max_length=20)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('card_brand', models.CharField(blank=True, max_length=20)),
                ('card_last4', models.CharField(blank=True, max_length=4)),
                ('card_exp_month', models.IntegerField(blank=True, null=True)),
                ('card_exp_year', models.IntegerField(blank=True, null=True)),
                ('card_country', models.CharField(blank=True, max_length=2)),
                ('bank_name', models.CharField(blank=True, max_length=100)),
                ('bank_account_last4', models.CharField(blank=True, max_length=4)),
                ('bank_account_type', models.CharField(blank=True, max_length=20)),
                ('pix_key_type', models.CharField(blank=True, max_length=20)),
                ('pix_key_value', models.CharField(blank=True, max_length=255)),
                ('stripe_payment_method_id', models.CharField(blank=True, max_length=255)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('last_used', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'payment method',
                'verbose_name_plural': 'payment methods',
                'db_table': 'payment_methods',
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refund_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('currency', models.CharField(choices=[('usd', 'USD'), ('brl', 'BRL'), ('eur', 'EUR'), ('gbp', 'GBP'), ('cad', 'CAD'), ('aud', 'AUD'), ('jpy', 'JPY'), ('inr', 'INR'), ('mxn', 'MXN'), ('ars', 'ARS'), ('clp', 'CLP'), ('cop', 'COP'), ('pen', 'PEN'), ('uyu', 'UYU'), ('pyg', 'PYG'), ('bob', 'BOB'), ('cny', 'CNY'), ('krw', 'KRW'), ('sgd', 'SGD'), ('hkd', 'HKD')], default='usd', max_length=3)),
                ('reason', models.CharField(choices=[('duplicate', 'Duplicate Charge'), ('fraudulent', 'Fraudulent'), ('requested_by_customer', 'Requested by Customer'), ('defective_product', 'Defective Product'), ('not_received', 'Product Not Received'), ('quality_issue', 'Quality Issue'), ('technical_issue', 'Technical Issue'), ('billing_error', 'Billing Error'), ('other', 'Other')], default='requested_by_customer', max_length=30)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('is_partial', models.BooleanField(default=False)),
                ('original_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('stripe_refund_id', models.CharField(blank=True, max_length=255)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('admin_notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'refund',
                'verbose_name_plural': 'refunds',
                'db_table': 'refunds',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subscription_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('plan_name', models.CharField(max_length=100)),
                ('plan_name_pt', models.CharField(blank=True, help_text='Portuguese plan name', max_length=100)),
                ('plan_type', models.CharField(choices=[('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly'), ('lifetime', 'Lifetime'), ('trial', 'Trial')], default='monthly', max_length=20)),
                ('price_usd', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_brl', models.DecimalField(decimal_places=2, max_digits=10)),
                ('price_eur', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_gbp', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_cad', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_aud', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('cancelled', 'Cancelled'), ('expired', 'Expired'), ('paused', 'Paused'), ('past_due', 'Past Due'), ('unpaid', 'Unpaid'), ('trialing', 'Trialing')], default='active', max_length=20)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('next_billing_date', models.DateTimeField(blank=True, null=True)),
                ('trial_end_date', models.DateTimeField(blank=True, null=True)),
                ('billing_cycle', models.CharField(default='monthly', max_length=20)),
                ('billing_interval', models.IntegerField(default=1)),
                ('stripe_subscription_id', models.CharField(blank=True, max_length=255)),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255)),
                ('stripe_price_id', models.CharField(blank=True, max_length=255)),
                ('features', models.JSONField(default=list, help_text='List of features included in this plan')),
                ('max_courses', models.IntegerField(default=1, help_text='Maximum number of courses allowed')),
                ('has_certificates', models.BooleanField(default=True)),
                ('has_live_support', models.BooleanField(default=False)),
                ('has_mentor_access', models.BooleanField(default=False)),
                ('has_priority_support', models.BooleanField(default=False)),
                ('has_offline_access', models.BooleanField(default=False)),
                ('has_team_features', models.BooleanField(default=False)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('cancellation_reason', models.TextField(blank=True)),
                ('reactivation_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('cancelled_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'subscription',
                'verbose_name_plural': 'subscriptions',
                'db_table': 'subscriptions',
            },
        ),
    ]
