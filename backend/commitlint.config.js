/**
 * üìù CONFIGURA√á√ÉO COMMITLINT PARA FENIX ACADEMY API
 * 
 * Configura√ß√£o para commits padronizados seguindo Conventional Commits
 */

module.exports = {
    extends: ['@commitlint/config-conventional'],

    rules: {
        // Tipo de commit obrigat√≥rio
        'type-enum': [
            2,
            'always',
            [
                'feat',     // Nova funcionalidade
                'fix',      // Corre√ß√£o de bug
                'docs',     // Documenta√ß√£o
                'style',    // Formata√ß√£o, ponto e v√≠rgula, etc.
                'refactor', // Refatora√ß√£o de c√≥digo
                'perf',     // Melhorias de performance
                'test',     // Adicionando testes
                'chore',    // Tarefas de manuten√ß√£o
                'ci',       // Mudan√ßas em CI/CD
                'build',    // Mudan√ßas no sistema de build
                'revert'    // Reverter commits
            ]
        ],

        // Escopo obrigat√≥rio para commits de feature e fix
        'scope-enum': [
            2,
            'always',
            [
                'auth',        // Autentica√ß√£o
                'users',       // Usu√°rios
                'courses',     // Cursos
                'lessons',     // Aulas
                'enrollments', // Matr√≠culas
                'payments',    // Pagamentos
                'notifications', // Notifica√ß√µes
                'analytics',   // Analytics
                'admin',       // Admin
                'api',         // API geral
                'database',    // Banco de dados
                'security',    // Seguran√ßa
                'performance', // Performance
                'testing',     // Testes
                'docs',        // Documenta√ß√£o
                'deps',        // Depend√™ncias
                'config',      // Configura√ß√µes
                'docker',      // Docker
                'nginx',       // Nginx
                'redis',       // Redis
                'mongodb',     // MongoDB
                'email',       // Email
                'sms',         // SMS
                'stripe',      // Stripe
                'firebase',    // Firebase
                'aws',         // AWS
                'cloudinary'   // Cloudinary
            ]
        ],

        // Assunto obrigat√≥rio
        'subject-empty': [2, 'never'],

        // Assunto n√£o pode terminar com ponto
        'subject-full-stop': [2, 'never', '.'],

        // Assunto deve come√ßar com min√∫scula
        'subject-case': [2, 'always', 'lower-case'],

        // Assunto deve ter no m√°ximo 72 caracteres
        'subject-max-length': [2, 'always', 72],

        // Corpo opcional
        'body-leading-blank': [1, 'always'],
        'body-max-line-length': [2, 'always', 100],

        // Footer opcional
        'footer-leading-blank': [1, 'always'],
        'footer-max-line-length': [2, 'always', 100],

        // Tipo deve ser min√∫sculo
        'type-case': [2, 'always', 'lower-case'],

        // Escopo deve ser min√∫sculo
        'scope-case': [2, 'always', 'lower-case'],

        // Escopo n√£o pode ser vazio para features e fixes
        'scope-empty': [2, 'never'],

        // Tipo n√£o pode ser vazio
        'type-empty': [2, 'never']
    },

    // Configura√ß√µes de mensagem
    helpUrl: 'https://github.com/conventional-changelog/commitlint/#what-is-commitlint',

    // Exemplos de commits v√°lidos
    examples: {
        valid: [
            'feat(auth): adicionar autentica√ß√£o JWT com refresh tokens',
            'fix(users): corrigir valida√ß√£o de email no registro',
            'docs(api): atualizar documenta√ß√£o da API de cursos',
            'style(courses): aplicar formata√ß√£o consistente',
            'refactor(database): otimizar queries do MongoDB',
            'perf(redis): implementar cache inteligente',
            'test(auth): adicionar testes para middleware de autentica√ß√£o',
            'chore(deps): atualizar depend√™ncias para vers√µes mais recentes',
            'ci(docker): configurar pipeline de CI/CD',
            'build(webpack): otimizar configura√ß√£o de build',
            'revert(auth): reverter mudan√ßas na autentica√ß√£o'
        ],
        invalid: [
            'feat: nova funcionalidade', // Sem escopo
            'fix(): corre√ß√£o de bug', // Escopo vazio
            'FEAT(auth): autentica√ß√£o', // Tipo em mai√∫sculo
            'feat(AUTH): autentica√ß√£o', // Escopo em mai√∫sculo
            'feat(auth): Adicionar autentica√ß√£o', // Assunto em mai√∫sculo
            'feat(auth): adicionar autentica√ß√£o.', // Assunto com ponto
            'feat(auth): adicionar autentica√ß√£o com descri√ß√£o muito longa que excede o limite de caracteres permitido' // Assunto muito longo
        ]
    }
};



