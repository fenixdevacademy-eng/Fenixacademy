# Generated by Django 5.2.4 on 2025-07-28 23:08

import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExerciseProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('failed', 'Failed')], default='not_started', max_length=20)),
                ('attempts', models.IntegerField(default=0)),
                ('max_attempts_reached', models.BooleanField(default=False)),
                ('best_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('current_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('time_spent', models.IntegerField(default=0, help_text='Total time spent in seconds')),
                ('submitted_code', models.TextField(blank=True)),
                ('last_submission', models.DateTimeField(blank=True, null=True)),
                ('test_results', models.JSONField(blank=True, default=list)),
                ('passed_tests', models.IntegerField(default=0)),
                ('total_tests', models.IntegerField(default=0)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'exercise progress',
                'verbose_name_plural': 'exercise progress',
                'db_table': 'exercise_progress',
            },
        ),
        migrations.CreateModel(
            name='LessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('time_spent', models.IntegerField(default=0, help_text='Time spent in seconds')),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('video_progress', models.IntegerField(default=0, help_text='Video progress in seconds')),
                ('video_completed', models.BooleanField(default=False)),
                ('quiz_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('quiz_attempts', models.IntegerField(default=0)),
                ('best_quiz_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('notes', models.TextField(blank=True)),
                ('bookmarked', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'lesson progress',
                'verbose_name_plural': 'lesson progress',
                'db_table': 'lesson_progress',
            },
        ),
        migrations.CreateModel(
            name='StudySession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('duration_minutes', models.IntegerField(default=0)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('session_type', models.CharField(choices=[('video', 'Video Learning'), ('reading', 'Reading'), ('exercise', 'Exercise'), ('quiz', 'Quiz'), ('project', 'Project')], default='video', max_length=20)),
                ('focus_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('completion_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('device_type', models.CharField(blank=True, max_length=20)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'study session',
                'verbose_name_plural': 'study sessions',
                'db_table': 'study_sessions',
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('title_pt', models.CharField(blank=True, help_text='Portuguese title', max_length=200)),
                ('description', models.TextField()),
                ('description_pt', models.TextField(blank=True, help_text='Portuguese description')),
                ('achievement_type', models.CharField(choices=[('course_completion', 'Course Completion'), ('streak', 'Study Streak'), ('perfect_score', 'Perfect Score'), ('speed_learner', 'Speed Learner'), ('persistent', 'Persistent Learner'), ('helper', 'Community Helper'), ('innovator', 'Innovator'), ('leader', 'Leader'), ('first_course', 'First Course'), ('certificate_earner', 'Certificate Earner')], max_length=30)),
                ('difficulty', models.CharField(choices=[('bronze', 'Bronze'), ('silver', 'Silver'), ('gold', 'Gold'), ('platinum', 'Platinum'), ('diamond', 'Diamond')], default='bronze', max_length=20)),
                ('icon', models.CharField(blank=True, help_text='Icon class or emoji', max_length=50)),
                ('color', models.CharField(default='#FFD700', help_text='Achievement color', max_length=7)),
                ('image', models.ImageField(blank=True, null=True, upload_to='user_achievements/')),
                ('criteria_met', models.JSONField(default=dict, help_text='Criteria that were met')),
                ('points_earned', models.IntegerField(default=0)),
                ('awarded_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'user achievement',
                'verbose_name_plural': 'user achievements',
                'db_table': 'user_achievements_progress',
            },
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_courses_enrolled', models.IntegerField(default=0)),
                ('total_courses_completed', models.IntegerField(default=0)),
                ('total_lessons_completed', models.IntegerField(default=0)),
                ('total_exercises_completed', models.IntegerField(default=0)),
                ('total_study_hours', models.IntegerField(default=0)),
                ('total_points_earned', models.IntegerField(default=0)),
                ('current_streak_days', models.IntegerField(default=0)),
                ('longest_streak_days', models.IntegerField(default=0)),
                ('last_study_date', models.DateTimeField(blank=True, null=True)),
                ('current_level', models.IntegerField(default=1)),
                ('experience_points', models.IntegerField(default=0)),
                ('experience_to_next_level', models.IntegerField(default=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'user progress',
                'verbose_name_plural': 'user progress',
                'db_table': 'user_progress',
            },
        ),
        migrations.CreateModel(
            name='CourseProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('progress_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total_time_spent', models.IntegerField(default=0, help_text='Total time spent in minutes')),
                ('last_accessed', models.DateTimeField(auto_now=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('average_score', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('total_points_earned', models.IntegerField(default=0)),
                ('total_attempts', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('completed_exercises', models.ManyToManyField(blank=True, related_name='completed_by_progress', to='courses.exercise')),
                ('completed_lessons', models.ManyToManyField(blank=True, related_name='completed_by_progress', to='courses.lesson')),
                ('completed_modules', models.ManyToManyField(blank=True, related_name='completed_by', to='courses.module')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='courses.course')),
            ],
            options={
                'verbose_name': 'course progress',
                'verbose_name_plural': 'course progress',
                'db_table': 'course_progress',
            },
        ),
    ]
