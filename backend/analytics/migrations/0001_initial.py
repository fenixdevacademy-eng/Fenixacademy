# Generated by Django 5.2.4 on 2025-07-28 23:08

import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ABTest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('test_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed')], default='draft', max_length=20)),
                ('variant_a', models.JSONField(default=dict)),
                ('variant_b', models.JSONField(default=dict)),
                ('traffic_split', models.DecimalField(decimal_places=2, default=0.5, max_digits=3)),
                ('primary_metric', models.CharField(max_length=100)),
                ('secondary_metrics', models.JSONField(blank=True, default=list)),
                ('variant_a_conversions', models.IntegerField(default=0)),
                ('variant_b_conversions', models.IntegerField(default=0)),
                ('variant_a_traffic', models.IntegerField(default=0)),
                ('variant_b_traffic', models.IntegerField(default=0)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'AB test',
                'verbose_name_plural': 'AB tests',
                'db_table': 'ab_tests',
            },
        ),
        migrations.CreateModel(
            name='AnalyticsEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('session_id', models.CharField(blank=True, max_length=100)),
                ('event_type', models.CharField(choices=[('page_view', 'Page View'), ('course_view', 'Course View'), ('course_enroll', 'Course Enrollment'), ('lesson_start', 'Lesson Start'), ('lesson_complete', 'Lesson Complete'), ('exercise_start', 'Exercise Start'), ('exercise_complete', 'Exercise Complete'), ('quiz_start', 'Quiz Start'), ('quiz_complete', 'Quiz Complete'), ('certificate_earned', 'Certificate Earned'), ('payment_start', 'Payment Start'), ('payment_complete', 'Payment Complete'), ('search', 'Search'), ('download', 'Download'), ('share', 'Share'), ('rating', 'Rating'), ('review', 'Review'), ('support_request', 'Support Request'), ('login', 'Login'), ('logout', 'Logout'), ('registration', 'Registration'), ('email_open', 'Email Open'), ('email_click', 'Email Click'), ('push_notification', 'Push Notification')], max_length=50)),
                ('event_data', models.JSONField(blank=True, default=dict)),
                ('page_url', models.URLField(blank=True)),
                ('page_title', models.CharField(blank=True, max_length=200)),
                ('referrer', models.URLField(blank=True)),
                ('user_agent', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('device_type', models.CharField(blank=True, max_length=20)),
                ('browser', models.CharField(blank=True, max_length=50)),
                ('os', models.CharField(blank=True, max_length=50)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'analytics event',
                'verbose_name_plural': 'analytics events',
                'db_table': 'analytics_events',
            },
        ),
        migrations.CreateModel(
            name='CohortAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cohort_date', models.DateField()),
                ('cohort_size', models.IntegerField()),
                ('retention_data', models.JSONField(default=dict)),
                ('day_1_retention', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('day_7_retention', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('day_30_retention', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('day_90_retention', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'cohort analysis',
                'verbose_name_plural': 'cohort analyses',
                'db_table': 'cohort_analyses',
            },
        ),
        migrations.CreateModel(
            name='ConversionFunnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('funnel_name', models.CharField(max_length=100)),
                ('funnel_type', models.CharField(choices=[('course_enrollment', 'Course Enrollment'), ('payment', 'Payment'), ('certificate', 'Certificate'), ('subscription', 'Subscription'), ('referral', 'Referral')], max_length=50)),
                ('steps', models.JSONField(default=list)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('total_entries', models.IntegerField(default=0)),
                ('total_conversions', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'conversion funnel',
                'verbose_name_plural': 'conversion funnels',
                'db_table': 'conversion_funnels',
            },
        ),
        migrations.CreateModel(
            name='LearningAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_courses', models.IntegerField(default=0)),
                ('active_courses', models.IntegerField(default=0)),
                ('completed_courses', models.IntegerField(default=0)),
                ('total_lessons', models.IntegerField(default=0)),
                ('completed_lessons', models.IntegerField(default=0)),
                ('average_lesson_duration', models.IntegerField(default=0)),
                ('total_exercises', models.IntegerField(default=0)),
                ('completed_exercises', models.IntegerField(default=0)),
                ('average_exercise_score', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('certificates_issued', models.IntegerField(default=0)),
                ('certificate_completion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('average_session_duration', models.IntegerField(default=0)),
                ('daily_active_users', models.IntegerField(default=0)),
                ('weekly_active_users', models.IntegerField(default=0)),
                ('monthly_active_users', models.IntegerField(default=0)),
                ('learning_paths_started', models.IntegerField(default=0)),
                ('learning_paths_completed', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'learning analytics',
                'verbose_name_plural': 'learning analytics',
                'db_table': 'learning_analytics',
            },
        ),
        migrations.CreateModel(
            name='PerformanceMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metric_name', models.CharField(max_length=100)),
                ('metric_value', models.FloatField()),
                ('metric_unit', models.CharField(blank=True, max_length=20)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('service', models.CharField(blank=True, max_length=50)),
                ('endpoint', models.CharField(blank=True, max_length=200)),
                ('metadata', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'verbose_name': 'performance metric',
                'verbose_name_plural': 'performance metrics',
                'db_table': 'performance_metrics',
            },
        ),
        migrations.CreateModel(
            name='RevenueMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('subscription_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('course_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('refunds', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_transactions', models.IntegerField(default=0)),
                ('successful_transactions', models.IntegerField(default=0)),
                ('failed_transactions', models.IntegerField(default=0)),
                ('new_customers', models.IntegerField(default=0)),
                ('returning_customers', models.IntegerField(default=0)),
                ('churned_customers', models.IntegerField(default=0)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'revenue metric',
                'verbose_name_plural': 'revenue metrics',
                'db_table': 'revenue_metrics',
            },
        ),
        migrations.CreateModel(
            name='UserJourney',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('duration_seconds', models.IntegerField(blank=True, null=True)),
                ('pages_visited', models.JSONField(blank=True, default=list)),
                ('actions_taken', models.JSONField(blank=True, default=list)),
                ('conversion_goal', models.CharField(blank=True, max_length=50)),
                ('conversion_achieved', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user journey',
                'verbose_name_plural': 'user journeys',
                'db_table': 'user_journeys',
            },
        ),
        migrations.CreateModel(
            name='UserSegment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('segment_name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('criteria', models.JSONField(default=dict)),
                ('user_count', models.IntegerField(default=0)),
                ('conversion_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('average_order_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('lifetime_value', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'user segment',
                'verbose_name_plural': 'user segments',
                'db_table': 'user_segments',
            },
        ),
    ]
