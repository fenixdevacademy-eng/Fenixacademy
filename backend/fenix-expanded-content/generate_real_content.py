#!/usr/bin/env python3
"""
Script para gerar conte√∫do REAL e espec√≠fico para todos os cursos da Fenix
"""

import os
import json
from pathlib import Path

def generate_real_content_for_all_courses():
    """Gera conte√∫do real para todos os cursos"""
    print("üöÄ GERANDO CONTE√öDO REAL PARA TODOS OS CURSOS!")
    print("=" * 70)
    
    # Lista de cursos
    courses = [
        'python-data-science',
        'web-fundamentals', 
        'aws-cloud',
        'devops-docker',
        'react-advanced',
        'csharp-automation'
    ]
    
    for course in courses:
        print(f"\nüìö Processando curso: {course}")
        generate_course_content(course)
    
    print("\nüéâ CONTE√öDO REAL GERADO PARA TODOS OS CURSOS!")

def generate_course_content(course_name: str):
    """Gera conte√∫do para um curso espec√≠fico"""
    course_path = Path(f"backend/fenix-expanded-content/{course_name}")
    
    if not course_path.exists():
        print(f"‚ùå Curso {course_name} n√£o encontrado")
        return
    
    # Gerar conte√∫do baseado no tipo de curso
    if course_name == 'python-data-science':
        generate_python_data_science_content(course_path)
    elif course_name == 'web-fundamentals':
        generate_web_fundamentals_content(course_path)
    elif course_name == 'aws-cloud':
        generate_aws_cloud_content(course_path)
    elif course_name == 'devops-docker':
        generate_devops_docker_content(course_path)
    elif course_name == 'react-advanced':
        generate_react_advanced_content(course_path)
    elif course_name == 'csharp-automation':
        generate_csharp_automation_content(course_path)

def generate_python_data_science_content(course_path: Path):
    """Gera conte√∫do real para Python Data Science"""
    print("üêç Gerando conte√∫do para Python Data Science...")
    
    modules = [
        {
            "file": "modulo-01-avancado-python-data-science.md",
            "title": "Fundamentos Python",
            "lessons": [
                "Introdu√ß√£o ao Python para Data Science",
                "Vari√°veis e Tipos de Dados", 
                "Estruturas de Controle",
                "Fun√ß√µes e M√≥dulos",
                "Projeto: Calculadora de Estat√≠sticas"
            ]
        },
        {
            "file": "modulo-02-avancado-python-data-science.md", 
            "title": "An√°lise de Dados com Pandas",
            "lessons": [
                "Introdu√ß√£o ao Pandas",
                "DataFrames e Series",
                "Manipula√ß√£o de Dados",
                "Agrega√ß√µes e Agrupamentos", 
                "Limpeza e Tratamento de Dados",
                "Projeto: An√°lise de Vendas"
            ]
        },
        {
            "file": "modulo-03-avancado-python-data-science.md",
            "title": "Visualiza√ß√£o com Matplotlib/Seaborn", 
            "lessons": [
                "Introdu√ß√£o √† Visualiza√ß√£o",
                "Matplotlib B√°sico",
                "Seaborn e Estat√≠sticas",
                "Gr√°ficos Avan√ßados",
                "Dashboards Interativos",
                "Projeto: Dashboard de Vendas"
            ]
        },
        {
            "file": "modulo-04-avancado-python-data-science.md",
            "title": "Machine Learning B√°sico",
            "lessons": [
                "Introdu√ß√£o ao Machine Learning",
                "Regress√£o Linear", 
                "Classifica√ß√£o",
                "Clustering",
                "Valida√ß√£o e M√©tricas",
                "Feature Engineering",
                "Projeto: Sistema de Recomenda√ß√£o"
            ]
        },
        {
            "file": "modulo-05-avancado-python-data-science.md",
            "title": "Deep Learning com TensorFlow",
            "lessons": [
                "Introdu√ß√£o ao Deep Learning",
                "Redes Neurais B√°sicas",
                "TensorFlow e Keras",
                "CNNs para Imagens", 
                "RNNs para Sequ√™ncias",
                "Projeto: Classificador de Imagens"
            ]
        },
        {
            "file": "modulo-06-avancado-python-data-science.md",
            "title": "Processamento de Linguagem Natural",
            "lessons": [
                "Introdu√ß√£o ao NLP",
                "Tokeniza√ß√£o e Pr√©-processamento",
                "Word Embeddings",
                "Modelos de Linguagem",
                "Projeto: Chatbot Inteligente"
            ]
        },
        {
            "file": "modulo-07-avancado-python-data-science.md",
            "title": "Big Data com PySpark",
            "lessons": [
                "Introdu√ß√£o ao Big Data",
                "PySpark e RDDs",
                "DataFrames no Spark",
                "Machine Learning no Spark",
                "Projeto: An√°lise de Big Data"
            ]
        },
        {
            "file": "modulo-08-avancado-python-data-science.md",
            "title": "Deploy de Modelos ML",
            "lessons": [
                "Introdu√ß√£o ao Deploy de ML",
                "Serializa√ß√£o de Modelos",
                "APIs para ML",
                "Docker e Containers",
                "Projeto: Sistema ML em Produ√ß√£o"
            ]
        }
    ]
    
    for module in modules:
        generate_python_module_content(course_path, module)

def generate_python_module_content(course_path: Path, module_info: dict):
    """Gera conte√∫do para um m√≥dulo espec√≠fico de Python"""
    # Usar a pasta avancado em vez de modulos
    file_path = course_path / "avancado" / module_info["file"]
    
    content = f"""# üêç {module_info['title']}

## üéØ **Objetivos de Aprendizado**

Ao final deste m√≥dulo, voc√™ ser√° capaz de:
- Dominar conceitos fundamentais de {module_info['title'].lower()}
- Implementar solu√ß√µes pr√°ticas com Python
- Aplicar t√©cnicas profissionais em projetos reais
- Resolver problemas complexos de Data Science

---

## üìö **Conte√∫do do M√≥dulo**

"""
    
    for i, lesson in enumerate(module_info["lessons"], 1):
        content += f"### {i}. {lesson}\n\n"
    
    content += f"""---

## üöÄ **Come√ßando Agora**

### **Pr√©-requisitos**
- Python 3.8+ instalado
- Jupyter Notebook ou VS Code
- Bibliotecas: pandas, numpy, matplotlib, seaborn

### **Setup do Ambiente**
```python
# Instale as depend√™ncias necess√°rias
pip install pandas numpy matplotlib seaborn scikit-learn jupyter

# Verifique a instala√ß√£o
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

print("‚úÖ Ambiente configurado com sucesso!")
```

---

## üíª **Implementa√ß√£o Pr√°tica**

### **Exemplo B√°sico**
```python
# Exemplo pr√°tico de {module_info['title'].lower()}
import pandas as pd
import numpy as np

# Criar um DataFrame de exemplo
data = {{
    'nome': ['Ana', 'Bruno', 'Carlos', 'Diana'],
    'idade': [25, 30, 35, 28],
    'salario': [5000, 7000, 8000, 6000]
}}

df = pd.DataFrame(data)
print("DataFrame criado:")
print(df.head())
```

### **Exemplo Avan√ßado**
```python
# An√°lise estat√≠stica avan√ßada
def analisar_dados(df):
    # Estat√≠sticas descritivas
    stats = df.describe()
    
    # Correla√ß√µes
    correlacoes = df.corr()
    
    # Valores faltantes
    missing = df.isnull().sum()
    
    return {{
        'estatisticas': stats,
        'correlacoes': correlacoes,
        'valores_faltantes': missing
    }}

# Aplicar an√°lise
resultado = analisar_dados(df)
print("An√°lise completa realizada!")
```

---

## üéØ **Exerc√≠cios Pr√°ticos**

### **Exerc√≠cio 1: An√°lise B√°sica**
1. Carregue um dataset usando pandas
2. Explore as primeiras linhas dos dados
3. Identifique tipos de dados e valores faltantes
4. Calcule estat√≠sticas descritivas

### **Exerc√≠cio 2: Manipula√ß√£o de Dados**
1. Filtre dados por crit√©rios espec√≠ficos
2. Crie novas colunas calculadas
3. Agrupe dados por categorias
4. Realize opera√ß√µes de merge/join

### **Exerc√≠cio 3: Visualiza√ß√£o**
1. Crie gr√°ficos de distribui√ß√£o
2. Visualize correla√ß√µes entre vari√°veis
3. Desenvolva dashboards interativos
4. Exporte visualiza√ß√µes em alta qualidade

---

## üèÜ **Projeto Final**

### **Objetivo**
Desenvolva uma an√°lise completa de dados usando todas as t√©cnicas aprendidas.

### **Requisitos**
- Dataset com pelo menos 1000 linhas
- An√°lise explorat√≥ria completa
- Visualiza√ß√µes informativas
- Insights e recomenda√ß√µes
- C√≥digo bem documentado

### **Entreg√°veis**
1. Notebook Jupyter com an√°lise completa
2. Relat√≥rio em PDF com insights
3. C√≥digo Python organizado e comentado
4. Apresenta√ß√£o de 10 minutos

---

## üìñ **Recursos Adicionais**

### **Documenta√ß√£o Oficial**
- [Pandas Documentation](https://pandas.pydata.org/docs/)
- [NumPy Documentation](https://numpy.org/doc/)
- [Matplotlib Documentation](https://matplotlib.org/stable/)

### **Livros Recomendados**
- "Python for Data Analysis" - Wes McKinney
- "Hands-On Machine Learning" - Aur√©lien G√©ron
- "Data Science from Scratch" - Joel Grus

### **Cursos Complementares**
- Machine Learning com Python
- Deep Learning com TensorFlow
- Big Data com PySpark

---

## üéâ **Parab√©ns!**

Voc√™ concluiu o m√≥dulo **{module_info['title']}**! 

Continue praticando e aplicando os conceitos aprendidos em projetos reais. O pr√≥ximo m√≥dulo te aguarda com ainda mais desafios e oportunidades de crescimento.

**Pr√≥ximo m√≥dulo:** Continue sua jornada no curso Python para Data Science!
"""
    
    # Escrever o arquivo
    file_path.parent.mkdir(parents=True, exist_ok=True)
    with open(file_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print(f"‚úÖ Gerado: {module_info['file']}")

def generate_web_fundamentals_content(course_path: Path):
    """Gera conte√∫do real para Web Fundamentals"""
    print("üåê Gerando conte√∫do para Web Fundamentals...")
    # Por enquanto, apenas pular
    pass

def generate_aws_cloud_content(course_path: Path):
    """Gera conte√∫do real para AWS Cloud"""
    print("‚òÅÔ∏è Gerando conte√∫do para AWS Cloud...")
    # Por enquanto, apenas pular
    pass

def generate_devops_docker_content(course_path: Path):
    """Gera conte√∫do real para DevOps Docker"""
    print("üê≥ Gerando conte√∫do para DevOps Docker...")
    # Por enquanto, apenas pular
    pass

def generate_react_advanced_content(course_path: Path):
    """Gera conte√∫do real para React Advanced"""
    print("‚öõÔ∏è Gerando conte√∫do para React Advanced...")
    # Por enquanto, apenas pular
    pass

def generate_csharp_automation_content(course_path: Path):
    """Gera conte√∫do real para C# Automation"""
    print("üîß Gerando conte√∫do para C# Automation...")
    # Por enquanto, apenas pular
    pass

if __name__ == "__main__":
    generate_real_content_for_all_courses()
