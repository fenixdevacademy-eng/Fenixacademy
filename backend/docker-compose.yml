version: '3.8'

services:
  # API da Fenix Academy
  api:
    build: .
    container_name: fenix-api
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - MONGODB_URI=mongodb://mongodb:27017/fenix_academy
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=your-super-secret-jwt-key-here
      - JWT_EXPIRES_IN=7d
      - EMAIL_HOST=smtp.gmail.com
      - EMAIL_USER=fenix@academy.com
      - EMAIL_PASS=your-app-password
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - fenix-network
    restart: unless-stopped

  # MongoDB
  mongodb:
    image: mongo:6.0
    container_name: fenix-mongodb
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=fenix
      - MONGO_INITDB_ROOT_PASSWORD=fenix123
      - MONGO_INITDB_DATABASE=fenix_academy
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - fenix-network
    restart: unless-stopped

  # Redis
  redis:
    image: redis:7-alpine
    container_name: fenix-redis
    ports:
      - "6379:6379"
    command: redis-server --requirepass fenix123
    volumes:
      - redis_data:/data
    networks:
      - fenix-network
    restart: unless-stopped

  # MongoDB Express (Interface web para MongoDB)
  mongo-express:
    image: mongo-express:latest
    container_name: fenix-mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=fenix
      - ME_CONFIG_MONGODB_ADMINPASSWORD=fenix123
      - ME_CONFIG_MONGODB_URL=mongodb://fenix:fenix123@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=admin123
    depends_on:
      - mongodb
    networks:
      - fenix-network
    restart: unless-stopped

  # Redis Commander (Interface web para Redis)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: fenix-redis-commander
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:fenix123
    depends_on:
      - redis
    networks:
      - fenix-network
    restart: unless-stopped

  # Nginx (Proxy reverso e load balancer)
  nginx:
    image: nginx:alpine
    container_name: fenix-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./uploads:/var/www/uploads:ro
    depends_on:
      - api
    networks:
      - fenix-network
    restart: unless-stopped

  # Certbot (SSL/TLS)
  certbot:
    image: certbot/certbot
    container_name: fenix-certbot
    volumes:
      - ./nginx/ssl:/etc/letsencrypt
      - ./nginx/www:/var/www/html
    command: certonly --webroot --webroot-path=/var/www/html --email fenix@academy.com --agree-tos --no-eff-email -d fenixacademy.com -d www.fenixacademy.com
    networks:
      - fenix-network

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  fenix-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16



